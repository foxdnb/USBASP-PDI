Archive member included to satisfy reference by file (symbol)

/usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o (exit)
/usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_copy_data.o)
                              usbdrv/usbdrv.o (__do_copy_data)
/usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_clear_bss.o)
                              usbdrv/usbdrv.o (__do_clear_bss)
/usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/libc.a(memcpy_P.o)
                              pdi.o (memcpy_P)
/usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/libc.a(memmove.o)
                              main.o (memmove)
/usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/libc.a(memcpy.o)
                              /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/libc.a(memmove.o) (memcpy)

Allocating common symbols
Common symbol       size              file

usbTxBuf            0xb               usbdrv/usbdrv.o
tpi_dly_cnt         0x2               tpi.o
usbDeviceAddr       0x1               usbdrv/usbdrv.o
usbRxToken          0x1               usbdrv/usbdrv.o
usbInputBufOffset   0x1               usbdrv/usbdrv.o
sck_spsr            0x1               isp.o
ispTransmit         0x2               isp.o
sck_spcr            0x1               isp.o
usbMsgPtr           0x2               usbdrv/usbdrv.o
isp_hiaddr          0x1               isp.o
usbRxLen            0x1               usbdrv/usbdrv.o
usbNewDeviceAddr    0x1               usbdrv/usbdrv.o
usbCurrentTok       0x1               usbdrv/usbdrv.o
usbConfiguration    0x1               usbdrv/usbdrv.o
usbRxBuf            0x16              usbdrv/usbdrv.o
sck_sw_delay        0x1               isp.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000002000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000002 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
LOAD usbdrv/usbdrv.o
LOAD usbdrv/usbdrvasm.o
LOAD usbdrv/oddebug.o
LOAD isp.o
LOAD clock.o
LOAD tpi.o
LOAD main.o
LOAD pdi.o
START GROUP
LOAD /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a
LOAD /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/libm.a
LOAD /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/libc.a
LOAD /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/libatmega8.a
END GROUP
                0x0000000000002000                __TEXT_REGION_LENGTH__ = DEFINED (__TEXT_REGION_LENGTH__)?__TEXT_REGION_LENGTH__:0x2000
                0x000000000000ffa0                __DATA_REGION_LENGTH__ = DEFINED (__DATA_REGION_LENGTH__)?__DATA_REGION_LENGTH__:0xffa0
                0x0000000000010000                __EEPROM_REGION_LENGTH__ = DEFINED (__EEPROM_REGION_LENGTH__)?__EEPROM_REGION_LENGTH__:0x10000
                [0x0000000000000002]                __FUSE_REGION_LENGTH__ = DEFINED (__FUSE_REGION_LENGTH__)?__FUSE_REGION_LENGTH__:0x400
                0x0000000000000400                __LOCK_REGION_LENGTH__ = DEFINED (__LOCK_REGION_LENGTH__)?__LOCK_REGION_LENGTH__:0x400
                0x0000000000000400                __SIGNATURE_REGION_LENGTH__ = DEFINED (__SIGNATURE_REGION_LENGTH__)?__SIGNATURE_REGION_LENGTH__:0x400
                0x0000000000000400                __USER_SIGNATURE_REGION_LENGTH__ = DEFINED (__USER_SIGNATURE_REGION_LENGTH__)?__USER_SIGNATURE_REGION_LENGTH__:0x400

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000     0x19e0
 *(.vectors)
 .vectors       0x0000000000000000       0x26 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x0000000000000026                . = ALIGN (0x2)
                0x0000000000000026                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000026        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000026                __trampolines_end = .
 *libprintf_flt.a:*(.progmem.data)
 *libc.a:*(.progmem.data)
 *(.progmem*)
 .progmem.data  0x0000000000000026       0x52 usbdrv/usbdrv.o
                0x0000000000000026                usbDescriptorConfiguration
                0x0000000000000038                usbDescriptorDevice
                0x000000000000004a                usbDescriptorStringDevice
                0x0000000000000058                usbDescriptorStringVendor
                0x0000000000000074                usbDescriptorString0
 .progmem.data  0x0000000000000078        0x8 pdi.o
                0x0000000000000080                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000080                __ctors_start = .
 *(.ctors)
                0x0000000000000080                __ctors_end = .
                0x0000000000000080                __dtors_start = .
 *(.dtors)
                0x0000000000000080                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000080        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
                0x0000000000000080                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000080        0xc /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x000000000000008c       0x16 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_copy_data.o)
                0x000000000000008c                __do_copy_data
 .init4         0x00000000000000a2       0x10 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_clear_bss.o)
                0x00000000000000a2                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000000000000b2        0x4 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
 *(.init9)
 *(.text)
 .text          0x00000000000000b6        0x2 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
                0x00000000000000b6                __vector_12
                0x00000000000000b6                __bad_interrupt
                0x00000000000000b6                __vector_6
                0x00000000000000b6                __vector_3
                0x00000000000000b6                __vector_11
                0x00000000000000b6                __vector_13
                0x00000000000000b6                __vector_17
                0x00000000000000b6                __vector_7
                0x00000000000000b6                __vector_5
                0x00000000000000b6                __vector_4
                0x00000000000000b6                __vector_9
                0x00000000000000b6                __vector_2
                0x00000000000000b6                __vector_15
                0x00000000000000b6                __vector_8
                0x00000000000000b6                __vector_14
                0x00000000000000b6                __vector_10
                0x00000000000000b6                __vector_16
                0x00000000000000b6                __vector_18
 .text          0x00000000000000b8      0x268 usbdrv/usbdrv.o
                0x00000000000000b8                usbPoll
                0x0000000000000312                usbInit
 .text          0x0000000000000320      0x28c usbdrv/usbdrvasm.o
                0x0000000000000320                usbCrc16
                0x000000000000034a                usbCrc16Append
                0x0000000000000352                __vector_1
 .text          0x00000000000005ac        0x0 usbdrv/oddebug.o
 .text          0x00000000000005ac      0x4ba isp.o
                0x00000000000005ac                ispTransmit_sw
                0x00000000000005ea                ispTransmit_hw
                0x0000000000000646                spiHWenable
                0x0000000000000654                ispSetSCKOption
                0x0000000000000714                ispDelay
                0x0000000000000724                ispConnect
                0x0000000000000774                ispDisconnect
                0x0000000000000784                ispEnterProgrammingMode
                0x0000000000000820                ispReadFlash
                0x000000000000088a                ispWriteFlash
                0x000000000000093c                ispFlushPage
                0x00000000000009e2                ispReadEEPROM
                0x0000000000000a1c                ispWriteEEPROM
 .text          0x0000000000000a66       0x18 clock.o
                0x0000000000000a66                clockWait
 .text          0x0000000000000a7e       0xd2 tpi.o
                0x0000000000000a7e                tpi_init
                0x0000000000000a9e                tpi_send_byte
                0x0000000000000ae4                tpi_recv_byte
                0x0000000000000b16                tpi_read_block
                0x0000000000000b2a                tpi_write_block
 .text          0x0000000000000b50      0x6fc main.o
                0x0000000000000b50                usbFunctionSetup
                0x0000000000000eaa                usbFunctionRead
                0x000000000000101c                usbFunctionWrite
 .text          0x000000000000124c      0x728 pdi.o
                0x000000000000124c                pdiEnableTimerClock
                0x000000000000125c                pdiDisableTimerClock
                0x000000000000126c                pdiTimerClockEnabled
                0x0000000000001272                pdiSetClk1
                0x0000000000001276                pdiSetClk0
                0x000000000000127a                pdiSetData1
                0x0000000000001286                pdiSetData0
                0x0000000000001294                pdiSetDataIn
                0x00000000000012a0                pdiGetData
                0x00000000000012a8                byteParity
                0x00000000000012be                pdiSendByteX
                0x00000000000013c6                pdiSendIdle
                0x00000000000013cc                pdiSendBreak
                0x00000000000013d2                pdiSendByte
                0x00000000000013f0                pdiSendBytes
                0x0000000000001420                pdiCleanup
                0x0000000000001472                pdiReadByte
                0x0000000000001550                pdiReadCtrl
                0x00000000000015dc                pdiWaitNVM
                0x0000000000001624                pdiInit
                0x000000000000170a                pdiWriteCtrl
                0x000000000000176a                pdiResetDev
                0x0000000000001790                pdiSetPointer
                0x00000000000017f2                pdiReadBlock
 .text          0x0000000000001974        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_exit.o)
 .text          0x0000000000001974        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_copy_data.o)
 .text          0x0000000000001974        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_clear_bss.o)
 .text          0x0000000000001974        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/libc.a(memcpy_P.o)
 .text          0x0000000000001974        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/libc.a(memmove.o)
 .text          0x0000000000001974        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/libc.a(memcpy.o)
                0x0000000000001974                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x0000000000001974       0x22 main.o
                0x0000000000001974                main
 .text.libgcc.mul
                0x0000000000001996        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000001996        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000001996        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000001996        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000001996        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000001996        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x0000000000001996        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000001996        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x0000000000001996        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000001996        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x0000000000001996        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x0000000000001996        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x0000000000001996        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x0000000000001996        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x0000000000001996        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x0000000000001996        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000001996        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x0000000000001996        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x0000000000001996        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x0000000000001996        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x0000000000001996        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_clear_bss.o)
 .text.avr-libc
                0x0000000000001996       0x12 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/libc.a(memcpy_P.o)
                0x0000000000001996                memcpy_P
 .text.avr-libc
                0x00000000000019a8       0x22 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/libc.a(memmove.o)
                0x00000000000019a8                memmove
 .text.avr-libc
                0x00000000000019ca       0x12 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/libc.a(memcpy.o)
                0x00000000000019ca                memcpy
                0x00000000000019dc                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000000000019dc        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_exit.o)
                0x00000000000019dc                exit
                0x00000000000019dc                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000000000019dc        0x4 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_exit.o)
 *(.fini0)
                0x00000000000019e0                _etext = .

.data           0x0000000000800060        0x2 load address 0x00000000000019e0
                0x0000000000800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
 .data          0x0000000000800060        0x2 usbdrv/usbdrv.o
                0x0000000000800061                usbTxLen
 .data          0x0000000000800062        0x0 usbdrv/usbdrvasm.o
 .data          0x0000000000800062        0x0 usbdrv/oddebug.o
 .data          0x0000000000800062        0x0 isp.o
 .data          0x0000000000800062        0x0 clock.o
 .data          0x0000000000800062        0x0 tpi.o
 .data          0x0000000000800062        0x0 main.o
 .data          0x0000000000800062        0x0 pdi.o
 .data          0x0000000000800062        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_exit.o)
 .data          0x0000000000800062        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_copy_data.o)
 .data          0x0000000000800062        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_clear_bss.o)
 .data          0x0000000000800062        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/libc.a(memcpy_P.o)
 .data          0x0000000000800062        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/libc.a(memmove.o)
 .data          0x0000000000800062        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/libc.a(memcpy.o)
 *(.data*)
 *(.gnu.linkonce.d*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.r*)
                0x0000000000800062                . = ALIGN (0x2)
                0x0000000000800062                _edata = .
                0x0000000000800062                PROVIDE (__data_end, .)

.bss            0x0000000000800062       0xca
                0x0000000000800062                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800062        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
 .bss           0x0000000000800062        0x1 usbdrv/usbdrv.o
 .bss           0x0000000000800063        0x0 usbdrv/usbdrvasm.o
 .bss           0x0000000000800063        0x0 usbdrv/oddebug.o
 .bss           0x0000000000800063        0x0 isp.o
 .bss           0x0000000000800063        0x0 clock.o
 .bss           0x0000000000800063        0x0 tpi.o
 .bss           0x0000000000800063       0x96 main.o
 .bss           0x00000000008000f9        0x1 pdi.o
                0x00000000008000f9                pdi_nvmbusy
 .bss           0x00000000008000fa        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_exit.o)
 .bss           0x00000000008000fa        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_copy_data.o)
 .bss           0x00000000008000fa        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_clear_bss.o)
 .bss           0x00000000008000fa        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/libc.a(memcpy_P.o)
 .bss           0x00000000008000fa        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/libc.a(memmove.o)
 .bss           0x00000000008000fa        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/libc.a(memcpy.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x00000000008000fa       0x2a usbdrv/usbdrv.o
                0x00000000008000fa                usbTxBuf
                0x0000000000800105                usbDeviceAddr
                0x0000000000800106                usbRxToken
                0x0000000000800107                usbInputBufOffset
                0x0000000000800108                usbMsgPtr
                0x000000000080010a                usbRxLen
                0x000000000080010b                usbNewDeviceAddr
                0x000000000080010c                usbCurrentTok
                0x000000000080010d                usbConfiguration
                0x000000000080010e                usbRxBuf
 COMMON         0x0000000000800124        0x6 isp.o
                0x0000000000800124                sck_spsr
                0x0000000000800125                ispTransmit
                0x0000000000800127                sck_spcr
                0x0000000000800128                isp_hiaddr
                0x0000000000800129                sck_sw_delay
 COMMON         0x000000000080012a        0x2 tpi.o
                0x000000000080012a                tpi_dly_cnt
                0x000000000080012c                PROVIDE (__bss_end, .)
                0x00000000000019e0                __data_load_start = LOADADDR (.data)
                0x00000000000019e2                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x000000000080012c        0x0
                [!provide]                        PROVIDE (__noinit_start, .)
 *(.noinit*)
                [!provide]                        PROVIDE (__noinit_end, .)
                0x000000000080012c                _end = .
                [!provide]                        PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 usbdrv/usbdrv.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000011       0x12 usbdrv/oddebug.o
 .comment       0x0000000000000011       0x12 isp.o
 .comment       0x0000000000000011       0x12 clock.o
 .comment       0x0000000000000011       0x12 main.o
 .comment       0x0000000000000011       0x12 pdi.o

.note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c
 .note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000      0x48c
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000      0x48c /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o

.debug_abbrev   0x0000000000000000      0x44e
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x44e /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o

.debug_line     0x0000000000000000       0x1a
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000       0x1a /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o

.debug_frame
 *(.debug_frame)

.debug_str      0x0000000000000000      0x17a
 *(.debug_str)
 .debug_str     0x0000000000000000      0x17a /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(main.bin elf32-avr)
LOAD linker stubs
